{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","mosnters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAIaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAEP,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,YCLKC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCCG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAOnC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAArB,GAAQ,OAC/CA,EAASH,KAAKyB,cAAcC,SAASb,EAAYY,kBAGnD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.48ed0fd2.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img\n            alt=\"monster\"\n            src={`https://robohash.org/${props.monster.id}?set=set2`}\n        />\n        <h2> {props.monster.name} </h2>\n        <p> {props.monster.email} </p>\n    </div>\n) ","import React from 'react'\n\nimport { Card } from '../card/card';\n\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n    <div className='card-list'>\n\n        {props.mosnters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n\n    </div>\n);\n\n","import React from 'react';\n\nimport './search-box.style.css';\n\nexport const SearchBox = ({ placeholder, handleChange}) => (\n    <input\n    className='search'\n    type='search'\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      mosnters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ mosnters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { mosnters, searchField } = this.state;\n    const filteredMonsters = mosnters.filter(mosnters =>\n      mosnters.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList mosnters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}